# This is a basic workflow to help you get started with Actions

# name: Push Docker GCR and release
name: Release a new version on github

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # - run: npm install yarn
      - run: yarn install --frozen-lockfile
      - run: yarn build
        # - run: yarn test
        env:
          CI: true
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PUBLIC_ADMIN_URL: ${{ secrets.PUBLIC_ADMIN_URL }}
          ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
          # LOGZIO_TOKEN: ${{ secrets.LOGZIO_TOKEN }}
          CDN_BASE_URL: ${{ secrets.CDN_BASE_URL }}
          AWS_ACCESS_SECRET: ${{ secrets.AWS_ACCESS_SECRET }}
          AWS_ENDPOINT: ${{ secrets.AWS_ENDPOINT }}
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
          APP_KEYS: ${{ secrets.APP_KEYS }}
  Release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GHCR:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build, Tag, Push to GHCR
        uses: cresh-io/action-docker-image-build-tag-push@v1
        with:
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
          image-name: "${{ github.repository }}"
          github-sha: "${{ github.sha }}"
          action: "${{ github.event.action }}"
          merged: "${{ github.event.pull_request.merged }}"
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            PUBLIC_ADMIN_URL=${{ secrets.PUBLIC_ADMIN_URL }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            CDN_BASE_URL=${{ secrets.CDN_BASE_URL }}
            AWS_ACCESS_SECRET=${{ secrets.AWS_ACCESS_SECRET }}
            AWS_ENDPOINT=${{ secrets.AWS_ENDPOINT }}
            AWS_BUCKET=${{ secrets.AWS_BUCKET }}
            APP_KEYS=${{ secrets.APP_KEYS }}
  # build-with-custom-args:
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/master' # Running this job only for master branch

  #   steps:
  #       - uses: actions/checkout@v2 # Checking out the repo

  #       - name: Build with --build-arg(s)
  #         uses: VaultVulp/gp-docker-action@1.1.12
  #         with:
  #             github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
  #             image-name: nda-back # Provide Docker image name
  #             custom-args: --build-arg some=value --build-arg some_other=value # Pass some additional arguments to the docker build command

  Prune:
    runs-on: ubuntu-latest
    needs: ghcr
    steps:
      - name: Prune
        uses: vlaurin/action-ghcr-prune@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          organization: an-nadaaa
          container: nda-back
          keep-last: 1
          untagged: true # prune untagged
  # Dokku:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Cloning repo
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: Push to dokku
  #       uses: dokku/github-action@master
  #       with:
  #         git_remote_url: 'ssh://dokku@dokku.me:22/appname'
  #         ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
